(defvar
	battery-level
	'to_entries | first | .value.capacity'
)
(defvar
	battery-level-rounded
	'to_entries | first | .value.capacity | tostring | .[:-1] + "0"'
)
(defvar
	battery-icon
	'if to_entries | first | .value.status == "Charging" then "󱐋" else to_entries | first | .value.capacity | tostring | .[:-1] | tonumber | ["󰂎", "󰁺", "󰁻", "󰁼", "󰁽", "󰁾", "󰁿", "󰂀", "󰂁", "󰂂", "󰁹"].[.] end'
)

(defwidget battery []
	(box
		:spacing 3
		:space-evenly false
		:class "battery level-${jq(EWW_BATTERY, battery-level-rounded, "r")}"
		(box
			:space-evenly false
			(label
				:class "icon--battery-level"
				:text "${jq(EWW_BATTERY, battery-icon, "r")}"
			)
		)
		(label
			:class "text--battery-level"
			:text "${jq(EWW_BATTERY, battery-level)}%"
		)
	)
)
