if check_install kubens; then
	alias kns='kubens'
	alias kctx='kubectx'
fi

if check_install kubectl; then
	alias k="kubectl"
	alias kd="k describe"
	alias kda="kd all"
	alias kdc="kd configmap"
	alias kdd="kd deployment"
	alias kdi="kd ingress"
	alias kdn="kd node"
	alias kdns="kd namespace"
	alias kdp="kd pod"
	alias kdpv="kd pv"
	alias kdpvc="kd pvc"
	alias kds="kd service"
	alias kdS="kd secret"
	alias kdsc="kd sc"
	alias kD="k delete"
	alias kDc="kD configmap"
	alias kDd="kD deployment"
	alias kDi="kD ingress"
	alias kDn="kD node"
	alias kDns="kD namespace"
	alias kDp="kD pod"
	alias kDpv="kD pv"
	alias kDpvc="kD pvc"
	alias kDs="kD service"
	alias kDS="kD secret"
	alias ke="k edit"
	alias kec="ke configmap"
	alias ked="ke deployment"
	alias kei="ke ingress"
	alias ken="ke node"
	alias kens="ke namespace"
	alias kep="ke pod"
	alias kepv="ke pv"
	alias kepvc="ke pvc"
	alias kes="ke service"
	alias keS="ke secret"
	alias kesc="ke sc"
	alias kex="k exec"
	alias kg="k get"
	alias kga="kg all"
	alias kgc="kg configmap"
	alias kgd="kg deployment"
	alias kgi="kg ingress"
	alias kgn="kg node"
	alias kgns="kg namespace"
	alias kgp="kg pods"
	alias kgpw="kgp -w"
	alias kgpA="kgp -A"
	alias kgpAw="kgp -Aw"
	alias kgpv="kg pv"
	alias kgpvc="kg pvc"
	alias kgs="kg service"
	alias kgS="kg secret"
	alias kgsc="kg sc"
	alias kgwn="kg -o wide node"
	alias kl="k logs"
	alias klf="kl -f"
	alias krr="k rollout restart"
	alias ks="k scale --replicas"
	alias ksd="k scale deployment --replicas"
fi
